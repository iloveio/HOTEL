////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Entertainment.cs
//
// summary:	Implements the entertainment class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Hotel.Database;
using HumanResourcesLib;

namespace Hotel.Database
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An entertainment. </summary>
    ///
    /// <remarks>   Student, 19.12.2016. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public abstract class Entertainment
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the price. </summary>
        ///
        /// <value> The price. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public float price { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string name { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of employees. </summary>
        ///
        /// <value> A List of employees. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public List<Employee> employeeList { get; set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Adds an employee to shift. </summary>
        ///
        /// <remarks>   Student, 19.12.2016. </remarks>
        ///
        /// <param name="employee"> The employee. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void addEmployeeToShift(Employee employee)
        {
            employeeList.Add(employee);
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Removes the employee from shift described by employee. </summary>
        ///
        /// <remarks>   Student, 19.12.2016. </remarks>
        ///
        /// <param name="employee"> The employee. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public void removeEmployeeFromShift(Employee employee)
        {
            employeeList.Remove(employee);
        }
    }
}
